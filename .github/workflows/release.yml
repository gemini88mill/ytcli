name: Release

on:
  workflow_dispatch:
  push:
    tags:
      - "v*"

permissions:
  contents: write

jobs:
  build:
    name: Build ${{ matrix.rid }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            rid: win-x64
            ext: .exe
          - os: ubuntu-latest
            rid: linux-x64
            ext: ""
          - os: macos-latest
            rid: osx-x64
            ext: ""
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.x

      - name: Restore
        run: dotnet restore

      - name: Publish (self-contained, single file)
        run: >-
          dotnet publish ytcli.csproj -c Release -r ${{ matrix.rid }} --self-contained true
          -p:PublishSingleFile=true -p:PublishTrimmed=false
          -p:IncludeNativeLibrariesForSelfExtract=true
          -o out/${{ matrix.rid }}

      - name: List output
        run: |
          dir out
        shell: pwsh

      - name: Archive
        shell: bash
        run: |
          cd out/${{ matrix.rid }}
          zip -r ../../ytcli-${{ matrix.rid }}.zip .

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ytcli-${{ matrix.rid }}
          path: |
            out/${{ matrix.rid }}/ytcli${{ matrix.ext }}
            ytcli-${{ matrix.rid }}.zip

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts
          merge-multiple: true

      - name: Show downloaded files
        run: |
          ls -R artifacts

      - name: Create GitHub Release (draft)
        uses: softprops/action-gh-release@v2
        with:
          draft: true
          files: |
            artifacts/ytcli*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
